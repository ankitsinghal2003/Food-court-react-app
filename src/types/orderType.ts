/** @format */

export interface OrderItem {
	menuItem: string; // Assuming it's a MongoDB ObjectId as a string
	variant?: string; // Variant is a mixed type, so we use Record<string, any>
	quantity: number;
	price: number;
	_id?: string;
}

export interface Order {
	_id: string;
	id?: string; // Optional, as it will be generated by MongoDB
	user: string; // User will also be a MongoDB ObjectId (string type)
	items: OrderItem[]; // Array of OrderItem objects
	totalAmount: number;
	recipientName: string;
	recipientEmail: string;
	recipientPhoneNumber: string;
	status: 'new' | 'preparing' | 'completed' | 'cancelled'; // Enum for status
	paymentStatus: 'pending' | 'paid' | 'failed'; // Enum for payment status
	paymentMethod: 'cash' | 'card' | 'online'; // Enum for payment method
	delivery: 'dine-in' | 'takeaway' | 'delivery'; // Enum for delivery method
	deliveryAddress?: string; // Optional, only required if delivery is 'delivery'
	deliveryTime?: Date; // Optional, date of delivery
	createdAt?: Date;
	updatedAt?: Date;
}
